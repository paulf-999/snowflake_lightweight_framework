!SET variable_substitution=true;
-- Grant future ownership of schemas, tables and views to '&{PROGRAM}_DBA' role
USE ROLE SECURITYADMIN;
GRANT OWNERSHIP ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE TABLES IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE TABLES IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE TABLES IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE VIEWS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE VIEWS IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT OWNERSHIP ON FUTURE VIEWS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;

--raw db
GRANT USAGE ON DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT USAGE ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE ON ALL STAGES IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON ALL STAGES IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON ALL FILE FORMATS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT SELECT ON ALL TABLES IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON ALL VIEWS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON ALL EXTERNAL TABLES IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON ALL EXTERNAL TABLES IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT SELECT ON ALL MATERIALIZED VIEWS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT CREATE TABLE, CREATE VIEW, CREATE EXTERNAL TABLE, CREATE MATERIALIZED VIEW, CREATE PROCEDURE, CREATE TASK ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT CREATE TABLE, CREATE VIEW, CREATE EXTERNAL TABLE, CREATE MATERIALIZED VIEW, CREATE PROCEDURE, CREATE TASK ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE ON FUTURE STAGES IN SCHEMA &{PROGRAM}_&{ENV}_RAW_DB.UTILITIES TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON FUTURE STAGES IN SCHEMA &{PROGRAM}_&{ENV}_RAW_DB.UTILITIES TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE ON FUTURE FILE FORMATS IN SCHEMA &{PROGRAM}_&{ENV}_RAW_DB.UTILITIES TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT USAGE ON FUTURE FILE FORMATS IN SCHEMA &{PROGRAM}_&{ENV}_RAW_DB.UTILITIES TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON FUTURE FILE FORMATS IN SCHEMA &{PROGRAM}_&{ENV}_RAW_DB.UTILITIES TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT SELECT ON FUTURE TABLES IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON FUTURE MATERIALIZED VIEWS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON FUTURE MATERIALIZED VIEWS IN DATABASE &{PROGRAM}_&{ENV}_RAW_DB TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;

--curated db
GRANT USAGE ON DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE, CREATE TABLE, CREATE VIEW, CREATE MATERIALIZED VIEW, CREATE PROCEDURE ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON ALL TABLES IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON ALL VIEWS IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON FUTURE TABLES IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON FUTURE VIEWS IN DATABASE &{PROGRAM}_&{ENV}_CURATED_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;

--analytics db
GRANT USAGE ON DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE, CREATE TABLE, CREATE VIEW, CREATE PROCEDURE ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE, CREATE TABLE, CREATE VIEW, CREATE PROCEDURE ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON FUTURE TABLES IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT SELECT ON FUTURE VIEWS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;

--warehouse perms
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_DEVELOPER_WH TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_DEVELOPER_WH TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_TRANSFORMATION_WH TO ROLE &{PROGRAM}_&{ENV}_DEVELOPER;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_TRANSFORMATION_WH TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
--permission below is required, as tasks need to be executed by the DBA role. So the DBA role will require access to the WH
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_TRANSFORMATION_WH TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_TRANSFORMATION_LRG_WH TO ROLE &{PROGRAM}_&{ENV}_DBA;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_LOADING_WH TO ROLE &{PROGRAM}_&{ENV}_DATA_LOADER;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_REPORTING_WH TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;
--ACCOUNTADMIN role requires access to the warehouses, in order to alter / create resource monitors
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_DEVELOPER_WH TO ROLE ACCOUNTADMIN;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_TRANSFORMATION_WH TO ROLE ACCOUNTADMIN;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_TRANSFORMATION_LRG_WH TO ROLE ACCOUNTADMIN;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_LOADING_WH TO ROLE ACCOUNTADMIN;
GRANT USAGE, OPERATE ON WAREHOUSE &{PROGRAM}_&{ENV}_REPORTING_WH TO ROLE ACCOUNTADMIN;
--&{PROGRAM}_&{ENV}_VISUALISER role perms
GRANT USAGE ON DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;
GRANT USAGE ON ALL SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;
GRANT USAGE ON FUTURE SCHEMAS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;
GRANT SELECT ON ALL TABLES IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;
GRANT SELECT ON ALL VIEWS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;
GRANT SELECT ON FUTURE TABLES IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;
GRANT SELECT ON FUTURE VIEWS IN DATABASE &{PROGRAM}_&{ENV}_ANALYTICS_DB TO ROLE &{PROGRAM}_&{ENV}_VISUALISER;